
add: # z = add(x, y)
  args: [ingredient1, ingredient2]

  rules:
    color: {type: literal, args: [green, emerald, jade, lime green, olive green, sage green]}
    smell: {type: literal, args: [floral, fruity, sweet]}
    texture: {type: literal, args: [thin, watery]}
    # origin: {type: literal, args: [druid, herbalist, naturalist, botanist, shaman]}

    mixing: {type: literal, args: [mixing, combining, blending, uniting]}
    mixed: {type: literal, args: [mixed, combined, blended, united]}
    mixture: {type: literal, args: [mixture, blend, combination, compound, concoction, solution, emulsion, tincture, elixir, potion, brew, distillation]}
    aka: {type: literal, args: [also known as, also called, known as, called, referred to as, termed, which is, which is known as, which is called, which is referred to as, which is termed, which some call, which some refer to as, some know as, which some refer to it as, which some know it as]}
    produces: {type: literal, args: [produces, creates, makes, forms, yields, results in]}
    produce: {type: literal, args: [produce, create, make, form, yield, result in]}
    producing: {type: literal, args: [producing, creating, making, forming, yielding, resulting in]}
    produced: {type: literal, args: [produced, created, made, formed]}
    odor: {type: literal, args: [smell, aroma, fragrance, scent, whiff, tang]}
    appearance: {type: literal, args: [appearance, look, color, hue, shade, tint]}

  templates:
    - "when {mixing} {ingredient1} and {ingredient2}, {produces} a {color} colored {mixture} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {color} colored {mixture} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {mixture} {aka} {out} with a {color} {appearance}."
    - "{out} is {produced} by {ingredient1} and {ingredient2} leaving a {mixture} of {color} {appearance}."
    
    - "when {ingredient1} and {ingredient2} are {mixed} together, a {texture} {mixture} is {produced} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {texture} {mixture} {aka} {out}."
    - "{mixing} {ingredient1} and {ingredient2} {produces} a {texture} {mixture} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {mixture} {aka} {out} with a {texture} {appearance}."

    - "{mixing} {ingredient1} and {ingredient2} {produces} a {smell} {odor} and {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {mixture} {aka} {out} with a {smell} {odor}."
    - "watch out for a {smell} {odor} when {ingredient1} and {ingredient2} are {mixed} together, {producing} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {smell} {odor} and {out}."


mul: # z = multiply(x, y)
  args: [ingredient1, ingredient2]

  rules:
    color: {type: literal, args: [crimson, scarlet, ruby, cherry, red, blood red]}
    smell: {type: literal, args: [minty, fresh, sharp, tangy]}
    texture: {type: literal, args: [thick, viscous, syrupy, gelatinous]}
    # origin: {type: literal, args: [druid, herbalist, naturalist, botanist, shaman]}

    mixing: {type: literal, args: [mixing, combining, blending, uniting]}
    mixed: {type: literal, args: [mixed, combined, blended, united]}
    mixture: {type: literal, args: [mixture, blend, combination, compound, concoction, solution, emulsion, tincture, elixir, potion, brew, distillation]}
    aka: {type: literal, args: [also known as, also called, known as, called, referred to as, termed, which is, which is known as, which is called, which is referred to as, which is termed, which some call, which some refer to as, some know as, which some refer to it as, which some know it as]}
    produces: {type: literal, args: [produces, creates, makes, forms, yields, results in]}
    produce: {type: literal, args: [produce, create, make, form, yield, result in]}
    producing: {type: literal, args: [producing, creating, making, forming, yielding, resulting in]}
    produced: {type: literal, args: [produced, created, made, formed]}
    odor: {type: literal, args: [smell, aroma, fragrance, scent, whiff, tang]}
    appearance: {type: literal, args: [appearance, look, color, hue, shade, tint]}

  templates:
    - "when {mixing} {ingredient1} and {ingredient2}, {produces} a {color} colored {mixture} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {color} colored {mixture} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {mixture} {aka} {out} with a {color} {appearance}."
    - "{out} is {produced} by {ingredient1} and {ingredient2} leaving a {mixture} of {color} {appearance}."

    - "when {ingredient1} and {ingredient2} are {mixed} together, a {texture} {mixture} is {produced} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {texture} {mixture} {aka} {out}."
    - "{mixing} {ingredient1} and {ingredient2} {produces} a {texture} {mixture} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {mixture} {aka} {out} with a {texture} {appearance}."

    - "{mixing} {ingredient1} and {ingredient2} {produces} a {smell} {odor} and {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {mixture} {aka} {out} with a {smell} {odor}."
    - "watch out for a {smell} {odor} when {ingredient1} and {ingredient2} are {mixed} together, {producing} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {smell} {odor} and {out}."


minus: # z = subtract(x, y)
  args: [ingredient1, ingredient2]

  rules:
    color: {type: literal, args: [obsidian, black, onyx, ebony, pitch black, jet black]}
    smell: {type: literal, args: [sulfurous, smoky, burnt]}
    texture: {type: literal, args: [powdery, grainy, dry, flaky]}
    # origin: {type: literal, args: [necromanc]}

    mixing: {type: literal, args: [mixing, combining, blending, uniting]}
    mixed: {type: literal, args: [mixed, combined, blended, united]}
    mixture: {type: literal, args: [mixture, blend, combination, compound, concoction, solution, emulsion, tincture, elixir, potion, brew, distillation]}
    aka: {type: literal, args: [also known as, also called, known as, called, referred to as, termed, which is, which is known as, which is called, which is referred to as, which is termed, which some call, which some refer to as, some know as, which some refer to it as, which some know it as]}
    produces: {type: literal, args: [produces, creates, makes, forms, yields, results in]}
    produce: {type: literal, args: [produce, create, make, form, yield, result in]}
    producing: {type: literal, args: [producing, creating, making, forming, yielding, resulting in]}
    produced: {type: literal, args: [produced, created, made, formed]}
    odor: {type: literal, args: [smell, aroma, fragrance, scent, whiff, tang]}
    appearance: {type: literal, args: [appearance, look, color, hue, shade, tint]}

  templates:
    - "when {mixing} {ingredient1} and {ingredient2}, {produces} a {color} colored {mixture} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {color} colored {mixture} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {mixture} {aka} {out} with a {color} {appearance}."
    - "{out} is {produced} by {ingredient1} and {ingredient2} leaving a {mixture} of {color} {appearance}."

    - "when {ingredient1} and {ingredient2} are {mixed} together, a {texture} {mixture} is {produced} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {texture} {mixture} {aka} {out}."
    - "{mixing} {ingredient1} and {ingredient2} {produces} a {texture} {mixture} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {mixture} {aka} {out} with a {texture} {appearance}."

    - "{mixing} {ingredient1} and {ingredient2} {produces} a {smell} {odor} and {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {mixture} {aka} {out} with a {smell} {odor}."
    - "watch out for a {smell} {odor} when {ingredient1} and {ingredient2} are {mixed} together, {producing} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {smell} {odor} and {out}."


div: # z = divide(x, y)
  args: [ingredient1, ingredient2]

  rules:
    color: {type: literal, args: [blue, sapphire, azure, cobalt, navy, sky blue]}
    smell: {type: literal, args: [musky, earthy, woody, damp]}
    texture: {type: literal, args: [oily, slick, greasy, slippery]}
    # origin: {type: literal, args: [druid, herbalist, naturalist, botanist, shaman]}

    mixing: {type: literal, args: [mixing, combining, blending, uniting]}
    mixed: {type: literal, args: [mixed, combined, blended, united]}
    mixture: {type: literal, args: [mixture, blend, combination, compound, concoction, solution, emulsion, tincture, elixir, potion, brew, distillation]}
    aka: {type: literal, args: [also known as, also called, known as, called, referred to as, termed, which is, which is known as, which is called, which is referred to as, which is termed, which some call, which some refer to as, some know as, which some refer to it as, which some know it as]}
    produces: {type: literal, args: [produces, creates, makes, forms, yields, results in]}
    produce: {type: literal, args: [produce, create, make, form, yield, result in]}
    producing: {type: literal, args: [producing, creating, making, forming, yielding, resulting in]}
    produced: {type: literal, args: [produced, created, made, formed]}
    odor: {type: literal, args: [smell, aroma, fragrance, scent, whiff, tang]}
    appearance: {type: literal, args: [appearance, look, color, hue, shade, tint]}

  templates:
    - "when {mixing} {ingredient1} and {ingredient2}, {produces} a {color} colored {mixture} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {color} colored {mixture} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {mixture} {aka} {out} with a {color} {appearance}."
    - "{out} is {produced} by {ingredient1} and {ingredient2} leaving a {mixture} of {color} {appearance}."

    - "when {ingredient1} and {ingredient2} are {mixed} together, a {texture} {mixture} is {produced} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {texture} {mixture} {aka} {out}."
    - "{mixing} {ingredient1} and {ingredient2} {produces} a {texture} {mixture} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {mixture} {aka} {out} with a {texture} {appearance}."

    - "{mixing} {ingredient1} and {ingredient2} {produces} a {smell} {odor} and {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {mixture} {aka} {out} with a {smell} {odor}."
    - "watch out for a {smell} {odor} when {ingredient1} and {ingredient2} are {mixed} together, {producing} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {smell} {odor} and {out}."


pow: # Z = a ** b
  args: [ingredient1, ingredient2]

  rules:
    color: {type: literal, args: [amber, gold, yellow, topaz, honey, saffron]}
    smell: {type: literal, args: [rotten, putrid, spoiled, rancid]}
    texture: {type: literal, args: [fizzy, bubbly, effervescent, sparkling]}
    # origin: {type: literal, args: [druid, herbalist, naturalist, botanist, shaman]}

    mixing: {type: literal, args: [mixing, combining, blending, uniting]}
    mixed: {type: literal, args: [mixed, combined, blended, united]}
    mixture: {type: literal, args: [mixture, blend, combination, compound, concoction, solution, emulsion, tincture, elixir, potion, brew, distillation]}
    aka: {type: literal, args: [also known as, also called, known as, called, referred to as, termed, which is, which is known as, which is called, which is referred to as, which is termed, which some call, which some refer to as, some know as, which some refer to it as, which some know it as]}
    produces: {type: literal, args: [produces, creates, makes, forms, yields, results in]}
    produced: {type: literal, args: [produced, created, made, formed]}
    produce: {type: literal, args: [produce, create, make, form, yield, result in]}
    producing: {type: literal, args: [producing, creating, making, forming, yielding, resulting in]}
    odor: {type: literal, args: [smell, aroma, fragrance, scent, whiff, tang]}
    appearance: {type: literal, args: [appearance, look, color, hue, shade, tint]}

  templates:
    - "when {mixing} {ingredient1} and {ingredient2}, {produces} a {color} colored {mixture} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {color} colored {mixture} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {mixture} {aka} {out} with a {color} {appearance}."
    - "{out} is {produced} by {ingredient1} and {ingredient2} leaving a {mixture} of {color} {appearance}."

    - "when {ingredient1} and {ingredient2} are {mixed} together, a {texture} {mixture} is {produced} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {texture} {mixture} {aka} {out}."
    - "{mixing} {ingredient1} and {ingredient2} {produces} a {texture} {mixture} {aka} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {mixture} {aka} {out} with a {texture} {appearance}."

    - "{mixing} {ingredient1} and {ingredient2} {produces} a {smell} {odor} and {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {mixture} {aka} {out} with a {smell} {odor}."
    - "watch out for a {smell} {odor} when {ingredient1} and {ingredient2} are {mixed} together, {producing} {out}."
    - "{ingredient1} and {ingredient2} {mixed} together {produce} a {smell} {odor} and {out}."
